.form {
    &__group {

        &:not(:last-child) {
            margin-bottom: 2rem;  
        }

    }

    &__input {
        font-size: 1.5rem;
        font-family: inherit;
        color: inherit;
        padding: 1.5rem 2rem;
        border-radius: 2px;
        background-color: rgba($color-white, .5);
        border: none;
        outline: none;
        border-bottom: 3px solid transparent;
        width: 90%;
        display: block;
        transition: all .3s;

        @include respond(tab-port) {
            width: 100%; 
            
        }

        &:focus {
            box-shadow: 0 1rem 2rem rgba($color-black, .1);
            border-bottom: 3px solid $color-primary;
        }

        &:focus:invalid{
            border-bottom: 3px solid $color-secondary-dark;
        }

        &::-webkit-input-placeholder {
            color: $color-grey-dark-2;
        }
    }

    &__label {
        font-size: 1.2rem;
        font-weight: 700;
        margin-left: 2rem;
        margin-top: .7rem;
        display: block;
        transition: all .3s;
    }

    &__input:placeholder-shown ~ &__label {
        // the ~ or + in-between is a sibling selector(general and adjacent respectively) and is used to select element(e.g label) that is actually in
        // thesame level with the first element(e.g input). i.e one is not a child of the other. the adjeacent(+) is used if they are next to
        // each other while the general(~) can be used when they are not next to each other.
        // note that the one we want to select must be preceeded by the first one.
        
        opacity: 0;
        visibility: hidden;
        transform: translateY(-4rem);
    }

    &__radio-group {
        width: 49%;
        display: inline-block;

        @include respond(tab-port) {
            width: 100%;
            margin-bottom: 2rem;
        }
    }

    &__radio-input {
        display: none;
    }

    &__radio-label {
        font-size: $default-font-size;
        cursor: pointer;  // the cursor will look like hand when the element is hover
        position: relative;
        padding-left: 4.5rem;
    }

    &__radio-button {
        height: 3rem;  
        width: 3rem;
        // we can make this element a circle if we give the width and height the same value, make it block or inline-block and 50% border-radius
        border: 5px solid $color-primary;
        border-radius: 50%;
        display: inline-block;
        position: absolute;
        top: -.45rem;
        left: 0;

        &::after {
            content: "";
            display: block;
            height: 1.3rem;
            width: 1.3rem;
            border-radius: 50%;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: $color-primary;
            opacity: 0;
            transition: opacity .2s;
        }
    }

    &__radio-input:checked ~ &__radio-label &__radio-button::after {
        opacity: 1;
    }

}