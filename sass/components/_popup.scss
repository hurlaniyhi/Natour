.popup {
    height: 100vh;
    width: 100%;
    position: fixed;
    top: 0;
    left: 0;
    background-color: rgba($color-black, .85);
    z-index: 300;
    opacity: 0;
    visibility: hidden;
    transition: all .3s;
   

    // lets use the feature query
    @supports (-webkit-backdrop-filter: blur(10px)) or (backdrop-filter: blur(10px)) {
        // we want to apply the below styles if the browser support the above css property

        -webkit-backdrop-filter: blur(10px); // it makes everything behind content (normally popup) blur
        backdrop-filter: blur(10px);
        background-color: rgba($color-black, .35); 
    }

    

    &__content {
        @include absCenter;
        width: 75%;
        background-color: $color-white;
        box-shadow: 0, 2rem 4rem rgba($color-black, .2);
        border-radius: 3px;
       // display: table;   // similar to flex
        display: flex;
        flex-wrap: wrap;
        overflow: hidden;
        opacity: 0;
        transform: translate(-50%, -50%) scale(0.25); // we reuse the translate because the mixin already have transform with translate
        transition: all .5s .2s; // .2s is for delay i.e the animation starts after 0.2s
        justify-content: center;
        align-items: center;
    } 

    &__left {
        width: 33.333%;
        //display: table-cell;  // similar to giving the parent element flex direction equal row

        @include respond(tab-port) {
            width: 100%;
            padding-left: .5rem;

        }
        @include respond(phone) {
            padding-left: 1.2rem;
        }
    }

    &__right {
        width: 66.667%;
        // display: table-cell;
        // vertical-align: middle;
        padding: 3rem 5rem;
        

        @include respond(tab-port) {
            width: 100%;
        }

        @include respond(tab-port) {
            padding: 3rem;
        }
    }

    &__img {
        display: block;
        width: 100%;
        @include respond(tab-port) {
            display: inline-block;
            width: 49.5%;
        }

        @include respond(phone) {
            width: 48.5%;
        }

    }

    &__text {
        font-size: 1.4rem;
        margin-bottom: 4rem;

        -moz-column-count: 2;
        -moz-column-gap: 4rem;
        -moz-column-rule: 1px solid $color-grey-light-2;

        column-count: 2;  // it will divide the p element text into two columns
        column-gap: 4rem;  // depicts the gap in-between the column
        column-rule: 1px solid $color-grey-light-2;  // gives a vertical border in-between the two columns

        -moz-hyphens: auto;  // for mozilla
        -ms-hyphens: auto; //for microsoft and edge
        -webkit-hyphens: auto;  // for chrome and safari
        hyphens: auto; 
        // it automatically provide hyphen to any word that is extended to the next line because the initial line could
        // not accommodate all its letters. for it to work, you must have added an attribute (lang="en") to you html tage


        @include respond(phone) { 
            column-count: 1;
            font-size: 1.3rem;
            
        }
            
    }


    // OPEN STATE

    &:target {// we will specify what we want to happen when id of this element is target
        opacity: 1;
        visibility: visible;
    }

    &:target &__content {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
    }

    &__close {
        &:link,
        &:visited {
            color: $color-grey-dark;
            position: absolute;
            top: 1.5rem;
            right: 2.5rem;
            font-size: 3rem;
            text-decoration: none;
            display: inline-block;
            transition: all .2s;
            line-height: 1;
            z-index: 1000;

            @include respond(tab-port) { 
                color: $color-white;
                
            }
        }

        &:hover {
            color: $color-primary;
        }
    }
}